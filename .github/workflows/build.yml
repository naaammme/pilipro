name: Build

on:
    pull_request:
        types:
            - opened
            - synchronize
            - reopened
            - ready_for_review
        paths-ignore:
            - "**.md"
    workflow_dispatch:
        inputs:
            build_android:
                description: "Build Android"
                required: false
                default: true
                type: boolean

            build_ios:
                description: "Build iOS"
                required: false
                default: true
                type: boolean

            build_mac:
                description: "Build Mac"
                required: false
                default: true
                type: boolean

            build_win_x64:
                description: "Build Win-x64"
                required: false
                default: true
                type: boolean

            build_linux_x64:
                description: "Build Linux-x64"
                required: false
                default: true
                type: boolean

            build_linux_arm64:
                description: "Build Linux-arm64"
                required: false
                default: true
                type: boolean

            tag:
                description: "tag"
                required: false
                default: ""
                type: string

jobs:
    android:
        if: ${{ github.event_name == 'pull_request' || github.event.inputs.build_android == 'true' }}
        name: Release Android
        runs-on: ubuntu-latest
        permissions: write-all
        timeout-minutes: 60

        steps:
            - name: 代码迁出
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: 构建Java环境
              uses: actions/setup-java@v4
              with:
                  distribution: "zulu"
                  java-version: "17"
                  cache: "gradle"
                  cache-dependency-path: |
                      android/*.gradle*
                      android/**/gradle-wrapper.properties

            - name: 安装Flutter
              uses: subosito/flutter-action@v2
              id: flutter-action
              with:
                  channel: stable
                  flutter-version-file: pubspec.yaml
                  cache: true

            - name: apply bottom sheet patch
              working-directory: ${{ env.FLUTTER_ROOT }}
              run: git apply $GITHUB_WORKSPACE/lib/scripts/bottom_sheet_patch.diff
              continue-on-error: true

            - name: Write key
              if: github.event_name == 'workflow_dispatch'
              run: |
                  if [ ! -z "${{ secrets.SIGN_KEYSTORE_BASE64 }}" ]; then
                    echo "${{ secrets.SIGN_KEYSTORE_BASE64 }}" | base64 --decode > android/app/key.jks
                    echo storeFile='key.jks' >> android/key.properties
                    echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> android/key.properties
                    echo keyAlias='${{ secrets.KEY_ALIAS }}' >> android/key.properties
                    echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> android/key.properties
                  fi

            - name: Install PowerShell
              run: |
                  sudo apt-get update
                  sudo apt-get install -y wget apt-transport-https software-properties-common
                  wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
                  sudo dpkg -i packages-microsoft-prod.deb
                  sudo apt-get update
                  sudo apt-get install -y powershell

            - name: Create build config
              run: |
                  VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | sed 's/+.*//')
                  BUILD=$(grep '^version:' pubspec.yaml | sed 's/.*+//')
                  COMMIT_HASH=$(git rev-parse --short HEAD)
                  TIMESTAMP=$(date +%s)
                  
                  cat > pili_release.json <<EOF
                  {
                    "pili.code": "$BUILD",
                    "pili.name": "$VERSION",
                    "pili.time": "$TIMESTAMP",
                    "pili.hash": "$COMMIT_HASH"
                  }
                  EOF
                  
                  echo "Generated pili_release.json:"
                  cat pili_release.json

            - name: Set and Extract version
              shell: pwsh
              run: lib/scripts/build.ps1 android

            - name: flutter build apk
              run: flutter build apk --release --split-per-abi --dart-define-from-file=pili_release.json

            - name: Find APK files
              run: |
                  echo "Searching for APK files..."
                  find . -name "*.apk" -type f
                  echo "---"
                  echo "Checking build directory:"
                  ls -la build/app/outputs/flutter-apk/ || echo "build/app/outputs/flutter-apk/ not found"
                  echo "Checking android/build directory:"
                  ls -la android/build/app/outputs/flutter-apk/ || echo "android/build/app/outputs/flutter-apk/ not found"

            - name: rename
              run: |
                  # Try both possible locations
                  APK_DIR=""
                  if [ -d "build/app/outputs/flutter-apk" ]; then
                    APK_DIR="build/app/outputs/flutter-apk"
                  elif [ -d "android/build/app/outputs/flutter-apk" ]; then
                    APK_DIR="android/build/app/outputs/flutter-apk"
                  else
                    echo "❌ APK directory not found!"
                    exit 1
                  fi

                  echo "Found APK directory: $APK_DIR"

                  for file in $APK_DIR/app-*-release.apk; do
                    if [ -f "$file" ]; then
                      abi=$(echo "$file" | sed -E 's|.*app-(.*)-release\.apk|\1|')
                      mv "$file" "PiliPro_android_${{ env.version }}_${abi}.apk"
                      echo "✓ Renamed: $(basename $file) -> PiliPro_android_${{ env.version }}_${abi}.apk"
                    fi
                  done

                  ls -lh PiliPro_android_*.apk || echo "❌ No APK files found!"
              shell: bash

            - name: Release
              if: ${{ github.event.inputs.tag != '' }}
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.event.inputs.tag }}
                  name: ${{ github.event.inputs.tag }}
                  files: |
                      PiliPro_android_*.apk

            - name: 上传
              uses: actions/upload-artifact@v4
              with:
                  name: Android_arm64-v8a
                  path: |
                      PiliPro_android_*_arm64-v8a.apk
                  if-no-files-found: error

            - name: 上传
              uses: actions/upload-artifact@v4
              with:
                  name: Android_armeabi-v7a
                  path: |
                      PiliPro_android_*_armeabi-v7a.apk
                  if-no-files-found: error

            - name: 上传
              uses: actions/upload-artifact@v4
              with:
                  name: Android_x86_64
                  path: |
                      PiliPro_android_*_x86_64.apk
                  if-no-files-found: warn

